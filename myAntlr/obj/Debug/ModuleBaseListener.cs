//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\work\myAntlr\myAntlr\Module.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace myAntlr {



using System;


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IModuleListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class ModuleBaseListener : IModuleListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarator([NotNull] ModuleParser.DeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarator([NotNull] ModuleParser.DeclaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.template_decl_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplate_decl_start([NotNull] ModuleParser.Template_decl_startContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.template_decl_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplate_decl_start([NotNull] ModuleParser.Template_decl_startContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.function_decl_specifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_decl_specifiers([NotNull] ModuleParser.Function_decl_specifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.function_decl_specifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_decl_specifiers([NotNull] ModuleParser.Function_decl_specifiersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.type_suffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_suffix([NotNull] ModuleParser.Type_suffixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.type_suffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_suffix([NotNull] ModuleParser.Type_suffixContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.function_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_argument_list([NotNull] ModuleParser.Function_argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.function_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_argument_list([NotNull] ModuleParser.Function_argument_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.cndExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCndExpr([NotNull] ModuleParser.CndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.cndExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCndExpr([NotNull] ModuleParser.CndExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.multiplicative_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicative_expression([NotNull] ModuleParser.Multiplicative_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.multiplicative_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicative_expression([NotNull] ModuleParser.Multiplicative_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.compound_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompound_statement([NotNull] ModuleParser.Compound_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.compound_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompound_statement([NotNull] ModuleParser.Compound_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.no_squares_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_squares_or_semicolon([NotNull] ModuleParser.No_squares_or_semicolonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.no_squares_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_squares_or_semicolon([NotNull] ModuleParser.No_squares_or_semicolonContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.assign_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_expr([NotNull] ModuleParser.Assign_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.assign_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_expr([NotNull] ModuleParser.Assign_exprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.cast_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast_expression([NotNull] ModuleParser.Cast_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.cast_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast_expression([NotNull] ModuleParser.Cast_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.no_angle_brackets_or_brackets"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_angle_brackets_or_brackets([NotNull] ModuleParser.No_angle_brackets_or_bracketsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.no_angle_brackets_or_brackets"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_angle_brackets_or_brackets([NotNull] ModuleParser.No_angle_brackets_or_bracketsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_expression([NotNull] ModuleParser.Equality_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_expression([NotNull] ModuleParser.Equality_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.parameter_decl_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_decl_clause([NotNull] ModuleParser.Parameter_decl_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.parameter_decl_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_decl_clause([NotNull] ModuleParser.Parameter_decl_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.no_comma_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_comma_or_semicolon([NotNull] ModuleParser.No_comma_or_semicolonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.no_comma_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_comma_or_semicolon([NotNull] ModuleParser.No_comma_or_semicolonContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccess([NotNull] ModuleParser.MemberAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccess([NotNull] ModuleParser.MemberAccessContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.base_class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBase_class([NotNull] ModuleParser.Base_classContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.base_class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBase_class([NotNull] ModuleParser.Base_classContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_name([NotNull] ModuleParser.Function_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_name([NotNull] ModuleParser.Function_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.parameter_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_name([NotNull] ModuleParser.Parameter_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.parameter_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_name([NotNull] ModuleParser.Parameter_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.ctor_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtor_list([NotNull] ModuleParser.Ctor_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.ctor_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtor_list([NotNull] ModuleParser.Ctor_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.access_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccess_specifier([NotNull] ModuleParser.Access_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.access_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccess_specifier([NotNull] ModuleParser.Access_specifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.ctor_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtor_expr([NotNull] ModuleParser.Ctor_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.ctor_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtor_expr([NotNull] ModuleParser.Ctor_exprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.init_declarator_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInit_declarator_list([NotNull] ModuleParser.Init_declarator_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.init_declarator_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInit_declarator_list([NotNull] ModuleParser.Init_declarator_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.assign_water_l2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_water_l2([NotNull] ModuleParser.Assign_water_l2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.assign_water_l2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_water_l2([NotNull] ModuleParser.Assign_water_l2Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.init_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInit_declarator([NotNull] ModuleParser.Init_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.init_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInit_declarator([NotNull] ModuleParser.Init_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.arrayIndexing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayIndexing([NotNull] ModuleParser.ArrayIndexingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.arrayIndexing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayIndexing([NotNull] ModuleParser.ArrayIndexingContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.parameter_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_decl([NotNull] ModuleParser.Parameter_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.parameter_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_decl([NotNull] ModuleParser.Parameter_declContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] ModuleParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] ModuleParser.NumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.base_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBase_type([NotNull] ModuleParser.Base_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.base_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBase_type([NotNull] ModuleParser.Base_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.return_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_type([NotNull] ModuleParser.Return_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.return_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_type([NotNull] ModuleParser.Return_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode([NotNull] ModuleParser.CodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode([NotNull] ModuleParser.CodeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.ctor_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtor_initializer([NotNull] ModuleParser.Ctor_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.ctor_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtor_initializer([NotNull] ModuleParser.Ctor_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.exclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExclusive_or_expression([NotNull] ModuleParser.Exclusive_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.exclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExclusive_or_expression([NotNull] ModuleParser.Exclusive_or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.assign_expr_w_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_expr_w_([NotNull] ModuleParser.Assign_expr_w_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.assign_expr_w_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_expr_w_([NotNull] ModuleParser.Assign_expr_w_Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.param_type_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam_type_id([NotNull] ModuleParser.Param_type_idContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.param_type_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam_type_id([NotNull] ModuleParser.Param_type_idContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.ptrMemberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPtrMemberAccess([NotNull] ModuleParser.PtrMemberAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.ptrMemberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPtrMemberAccess([NotNull] ModuleParser.PtrMemberAccessContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.initializer_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializer_list([NotNull] ModuleParser.Initializer_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.initializer_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializer_list([NotNull] ModuleParser.Initializer_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.additive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditive_expression([NotNull] ModuleParser.Additive_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.additive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditive_expression([NotNull] ModuleParser.Additive_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.no_squares"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_squares([NotNull] ModuleParser.No_squaresContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.no_squares"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_squares([NotNull] ModuleParser.No_squaresContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_operator([NotNull] ModuleParser.Unary_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_operator([NotNull] ModuleParser.Unary_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.declByClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclByClass([NotNull] ModuleParser.DeclByClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.declByClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclByClass([NotNull] ModuleParser.DeclByClassContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.shift_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShift_expression([NotNull] ModuleParser.Shift_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.shift_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShift_expression([NotNull] ModuleParser.Shift_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.normOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNormOr([NotNull] ModuleParser.NormOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.normOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNormOr([NotNull] ModuleParser.NormOrContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.@sizeof"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeof([NotNull] ModuleParser.SizeofContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.@sizeof"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeof([NotNull] ModuleParser.SizeofContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_name([NotNull] ModuleParser.Type_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_name([NotNull] ModuleParser.Type_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.no_brackets_curlies_or_squares"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_brackets_curlies_or_squares([NotNull] ModuleParser.No_brackets_curlies_or_squaresContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.no_brackets_curlies_or_squares"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_brackets_curlies_or_squares([NotNull] ModuleParser.No_brackets_curlies_or_squaresContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.sizeof_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeof_expression([NotNull] ModuleParser.Sizeof_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.sizeof_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeof_expression([NotNull] ModuleParser.Sizeof_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] ModuleParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] ModuleParser.IdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.unary_op_and_cast_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_op_and_cast_expr([NotNull] ModuleParser.Unary_op_and_cast_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.unary_op_and_cast_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_op_and_cast_expr([NotNull] ModuleParser.Unary_op_and_cast_exprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.funcCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncCall([NotNull] ModuleParser.FuncCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.funcCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncCall([NotNull] ModuleParser.FuncCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.primaryOnly"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryOnly([NotNull] ModuleParser.PrimaryOnlyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.primaryOnly"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryOnly([NotNull] ModuleParser.PrimaryOnlyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.sizeof_operand2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeof_operand2([NotNull] ModuleParser.Sizeof_operand2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.sizeof_operand2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeof_operand2([NotNull] ModuleParser.Sizeof_operand2Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.inclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInclusive_or_expression([NotNull] ModuleParser.Inclusive_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.inclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInclusive_or_expression([NotNull] ModuleParser.Inclusive_or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.function_param_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_param_list([NotNull] ModuleParser.Function_param_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.function_param_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_param_list([NotNull] ModuleParser.Function_param_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.no_brackets_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_brackets_or_semicolon([NotNull] ModuleParser.No_brackets_or_semicolonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.no_brackets_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_brackets_or_semicolon([NotNull] ModuleParser.No_brackets_or_semicolonContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.base_classes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBase_classes([NotNull] ModuleParser.Base_classesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.base_classes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBase_classes([NotNull] ModuleParser.Base_classesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.incDecOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncDecOp([NotNull] ModuleParser.IncDecOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.incDecOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncDecOp([NotNull] ModuleParser.IncDecOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.no_curlies"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_curlies([NotNull] ModuleParser.No_curliesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.no_curlies"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_curlies([NotNull] ModuleParser.No_curliesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.equality_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_operator([NotNull] ModuleParser.Equality_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.equality_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_operator([NotNull] ModuleParser.Equality_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.param_type_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam_type_list([NotNull] ModuleParser.Param_type_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.param_type_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam_type_list([NotNull] ModuleParser.Param_type_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] ModuleParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] ModuleParser.ExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.class_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_name([NotNull] ModuleParser.Class_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.class_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_name([NotNull] ModuleParser.Class_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.relational_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_expression([NotNull] ModuleParser.Relational_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.relational_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_expression([NotNull] ModuleParser.Relational_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.simple_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_decl([NotNull] ModuleParser.Simple_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.simple_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_decl([NotNull] ModuleParser.Simple_declContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.param_decl_specifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam_decl_specifiers([NotNull] ModuleParser.Param_decl_specifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.param_decl_specifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam_decl_specifiers([NotNull] ModuleParser.Param_decl_specifiersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_operator([NotNull] ModuleParser.Assignment_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_operator([NotNull] ModuleParser.Assignment_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.param_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam_type([NotNull] ModuleParser.Param_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.param_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam_type([NotNull] ModuleParser.Param_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.type_id_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_id_list([NotNull] ModuleParser.Type_id_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.type_id_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_id_list([NotNull] ModuleParser.Type_id_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.function_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_argument([NotNull] ModuleParser.Function_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.function_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_argument([NotNull] ModuleParser.Function_argumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_expression([NotNull] ModuleParser.Unary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_expression([NotNull] ModuleParser.Unary_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.ptrs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPtrs([NotNull] ModuleParser.PtrsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.ptrs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPtrs([NotNull] ModuleParser.PtrsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.constant_expr_w_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant_expr_w_([NotNull] ModuleParser.Constant_expr_w_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.constant_expr_w_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant_expr_w_([NotNull] ModuleParser.Constant_expr_w_Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.water"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWater([NotNull] ModuleParser.WaterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.water"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWater([NotNull] ModuleParser.WaterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr_expression([NotNull] ModuleParser.Or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr_expression([NotNull] ModuleParser.Or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] ModuleParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] ModuleParser.ConstantContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.assign_expr_w__l2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_expr_w__l2([NotNull] ModuleParser.Assign_expr_w__l2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.assign_expr_w__l2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_expr_w__l2([NotNull] ModuleParser.Assign_expr_w__l2Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.function_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_def([NotNull] ModuleParser.Function_defContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.function_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_def([NotNull] ModuleParser.Function_defContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsing_directive([NotNull] ModuleParser.Using_directiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsing_directive([NotNull] ModuleParser.Using_directiveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.relational_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_operator([NotNull] ModuleParser.Relational_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.relational_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_operator([NotNull] ModuleParser.Relational_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.ptr_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPtr_operator([NotNull] ModuleParser.Ptr_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.ptr_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPtr_operator([NotNull] ModuleParser.Ptr_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.@operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] ModuleParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.@operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] ModuleParser.OperatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.class_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_def([NotNull] ModuleParser.Class_defContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.class_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_def([NotNull] ModuleParser.Class_defContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.initializer_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializer_id([NotNull] ModuleParser.Initializer_idContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.initializer_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializer_id([NotNull] ModuleParser.Initializer_idContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.inc_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInc_dec([NotNull] ModuleParser.Inc_decContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.inc_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInc_dec([NotNull] ModuleParser.Inc_decContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd_expression([NotNull] ModuleParser.And_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd_expression([NotNull] ModuleParser.And_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_expression([NotNull] ModuleParser.Primary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_expression([NotNull] ModuleParser.Primary_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.exception_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterException_specification([NotNull] ModuleParser.Exception_specificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.exception_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitException_specification([NotNull] ModuleParser.Exception_specificationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.template_param_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplate_param_list([NotNull] ModuleParser.Template_param_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.template_param_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplate_param_list([NotNull] ModuleParser.Template_param_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.declByType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclByType([NotNull] ModuleParser.DeclByTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.declByType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclByType([NotNull] ModuleParser.DeclByTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.parameter_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_id([NotNull] ModuleParser.Parameter_idContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.parameter_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_id([NotNull] ModuleParser.Parameter_idContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.sizeof_operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeof_operand([NotNull] ModuleParser.Sizeof_operandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.sizeof_operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeof_operand([NotNull] ModuleParser.Sizeof_operandContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.no_brackets"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_brackets([NotNull] ModuleParser.No_bracketsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.no_brackets"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_brackets([NotNull] ModuleParser.No_bracketsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.bit_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBit_and_expression([NotNull] ModuleParser.Bit_and_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.bit_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBit_and_expression([NotNull] ModuleParser.Bit_and_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializer([NotNull] ModuleParser.InitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializer([NotNull] ModuleParser.InitializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.assign_water"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_water([NotNull] ModuleParser.Assign_waterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.assign_water"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_water([NotNull] ModuleParser.Assign_waterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ModuleParser.cast_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast_target([NotNull] ModuleParser.Cast_targetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ModuleParser.cast_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast_target([NotNull] ModuleParser.Cast_targetContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace myAntlr

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\v-dazou\documents\visual studio 2012\Projects\MyAntlr\myAntlr\Function.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace myAntlr {



using System;


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IFunctionListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class FunctionBaseListener : IFunctionListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.pre_else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPre_else([NotNull] FunctionParser.Pre_elseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.pre_else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPre_else([NotNull] FunctionParser.Pre_elseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarator([NotNull] FunctionParser.DeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarator([NotNull] FunctionParser.DeclaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.template_decl_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplate_decl_start([NotNull] FunctionParser.Template_decl_startContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.template_decl_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplate_decl_start([NotNull] FunctionParser.Template_decl_startContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.function_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_argument_list([NotNull] FunctionParser.Function_argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.function_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_argument_list([NotNull] FunctionParser.Function_argument_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.type_suffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_suffix([NotNull] FunctionParser.Type_suffixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.type_suffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_suffix([NotNull] FunctionParser.Type_suffixContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.cndExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCndExpr([NotNull] FunctionParser.CndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.cndExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCndExpr([NotNull] FunctionParser.CndExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.no_squares_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_squares_or_semicolon([NotNull] FunctionParser.No_squares_or_semicolonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.no_squares_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_squares_or_semicolon([NotNull] FunctionParser.No_squares_or_semicolonContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.For_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_statement([NotNull] FunctionParser.For_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.For_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_statement([NotNull] FunctionParser.For_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.cast_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast_expression([NotNull] FunctionParser.Cast_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.cast_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast_expression([NotNull] FunctionParser.Cast_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.no_angle_brackets_or_brackets"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_angle_brackets_or_brackets([NotNull] FunctionParser.No_angle_brackets_or_bracketsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.no_angle_brackets_or_brackets"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_angle_brackets_or_brackets([NotNull] FunctionParser.No_angle_brackets_or_bracketsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_expression([NotNull] FunctionParser.Equality_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_expression([NotNull] FunctionParser.Equality_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.no_comma_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_comma_or_semicolon([NotNull] FunctionParser.No_comma_or_semicolonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.no_comma_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_comma_or_semicolon([NotNull] FunctionParser.No_comma_or_semicolonContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.Try_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTry_statement([NotNull] FunctionParser.Try_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.Try_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTry_statement([NotNull] FunctionParser.Try_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] FunctionParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] FunctionParser.NumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.base_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBase_type([NotNull] FunctionParser.Base_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.base_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBase_type([NotNull] FunctionParser.Base_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.ptrMemberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPtrMemberAccess([NotNull] FunctionParser.PtrMemberAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.ptrMemberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPtrMemberAccess([NotNull] FunctionParser.PtrMemberAccessContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.pre_opener"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPre_opener([NotNull] FunctionParser.Pre_openerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.pre_opener"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPre_opener([NotNull] FunctionParser.Pre_openerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.no_squares"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_squares([NotNull] FunctionParser.No_squaresContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.no_squares"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_squares([NotNull] FunctionParser.No_squaresContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.shift_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShift_expression([NotNull] FunctionParser.Shift_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.shift_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShift_expression([NotNull] FunctionParser.Shift_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.declByClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclByClass([NotNull] FunctionParser.DeclByClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.declByClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclByClass([NotNull] FunctionParser.DeclByClassContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_name([NotNull] FunctionParser.Type_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_name([NotNull] FunctionParser.Type_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] FunctionParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] FunctionParser.BreakStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.sizeof_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeof_expression([NotNull] FunctionParser.Sizeof_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.sizeof_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeof_expression([NotNull] FunctionParser.Sizeof_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.unary_op_and_cast_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_op_and_cast_expr([NotNull] FunctionParser.Unary_op_and_cast_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.unary_op_and_cast_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_op_and_cast_expr([NotNull] FunctionParser.Unary_op_and_cast_exprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.funcCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncCall([NotNull] FunctionParser.FuncCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.funcCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncCall([NotNull] FunctionParser.FuncCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.inclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInclusive_or_expression([NotNull] FunctionParser.Inclusive_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.inclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInclusive_or_expression([NotNull] FunctionParser.Inclusive_or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.base_classes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBase_classes([NotNull] FunctionParser.Base_classesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.base_classes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBase_classes([NotNull] FunctionParser.Base_classesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.incDecOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncDecOp([NotNull] FunctionParser.IncDecOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.incDecOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncDecOp([NotNull] FunctionParser.IncDecOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.pre_closer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPre_closer([NotNull] FunctionParser.Pre_closerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.pre_closer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPre_closer([NotNull] FunctionParser.Pre_closerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.relational_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_expression([NotNull] FunctionParser.Relational_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.relational_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_expression([NotNull] FunctionParser.Relational_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.class_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_name([NotNull] FunctionParser.Class_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.class_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_name([NotNull] FunctionParser.Class_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.param_decl_specifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam_decl_specifiers([NotNull] FunctionParser.Param_decl_specifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.param_decl_specifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam_decl_specifiers([NotNull] FunctionParser.Param_decl_specifiersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.param_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam_type([NotNull] FunctionParser.Param_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.param_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam_type([NotNull] FunctionParser.Param_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.function_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_argument([NotNull] FunctionParser.Function_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.function_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_argument([NotNull] FunctionParser.Function_argumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.If_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] FunctionParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.If_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] FunctionParser.If_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.water"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWater([NotNull] FunctionParser.WaterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.water"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWater([NotNull] FunctionParser.WaterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.closing_curly"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClosing_curly([NotNull] FunctionParser.Closing_curlyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.closing_curly"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClosing_curly([NotNull] FunctionParser.Closing_curlyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.for_init_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_init_statement([NotNull] FunctionParser.For_init_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.for_init_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_init_statement([NotNull] FunctionParser.For_init_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr_expression([NotNull] FunctionParser.Or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr_expression([NotNull] FunctionParser.Or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.relational_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_operator([NotNull] FunctionParser.Relational_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.relational_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_operator([NotNull] FunctionParser.Relational_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.do_statement1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDo_statement1([NotNull] FunctionParser.Do_statement1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.do_statement1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDo_statement1([NotNull] FunctionParser.Do_statement1Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.@operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] FunctionParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.@operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] FunctionParser.OperatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.inc_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInc_dec([NotNull] FunctionParser.Inc_decContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.inc_dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInc_dec([NotNull] FunctionParser.Inc_decContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.initDeclSimple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitDeclSimple([NotNull] FunctionParser.InitDeclSimpleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.initDeclSimple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitDeclSimple([NotNull] FunctionParser.InitDeclSimpleContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.opening_curly"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpening_curly([NotNull] FunctionParser.Opening_curlyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.opening_curly"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpening_curly([NotNull] FunctionParser.Opening_curlyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_expression([NotNull] FunctionParser.Primary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_expression([NotNull] FunctionParser.Primary_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.gotoStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGotoStatement([NotNull] FunctionParser.GotoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.gotoStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGotoStatement([NotNull] FunctionParser.GotoStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.no_brackets"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_brackets([NotNull] FunctionParser.No_bracketsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.no_brackets"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_brackets([NotNull] FunctionParser.No_bracketsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.bit_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBit_and_expression([NotNull] FunctionParser.Bit_and_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.bit_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBit_and_expression([NotNull] FunctionParser.Bit_and_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.assign_water"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_water([NotNull] FunctionParser.Assign_waterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.assign_water"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_water([NotNull] FunctionParser.Assign_waterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.cast_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast_target([NotNull] FunctionParser.Cast_targetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.cast_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast_target([NotNull] FunctionParser.Cast_targetContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializer([NotNull] FunctionParser.InitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializer([NotNull] FunctionParser.InitializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.function_decl_specifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_decl_specifiers([NotNull] FunctionParser.Function_decl_specifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.function_decl_specifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_decl_specifiers([NotNull] FunctionParser.Function_decl_specifiersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] FunctionParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] FunctionParser.ReturnStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.multiplicative_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicative_expression([NotNull] FunctionParser.Multiplicative_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.multiplicative_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicative_expression([NotNull] FunctionParser.Multiplicative_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.assign_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_expr([NotNull] FunctionParser.Assign_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.assign_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_expr([NotNull] FunctionParser.Assign_exprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.expr_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_statement([NotNull] FunctionParser.Expr_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.expr_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_statement([NotNull] FunctionParser.Expr_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccess([NotNull] FunctionParser.MemberAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccess([NotNull] FunctionParser.MemberAccessContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.base_class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBase_class([NotNull] FunctionParser.Base_classContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.base_class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBase_class([NotNull] FunctionParser.Base_classContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.parameter_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_name([NotNull] FunctionParser.Parameter_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.parameter_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_name([NotNull] FunctionParser.Parameter_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.access_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccess_specifier([NotNull] FunctionParser.Access_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.access_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccess_specifier([NotNull] FunctionParser.Access_specifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.assign_water_l2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_water_l2([NotNull] FunctionParser.Assign_water_l2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.assign_water_l2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_water_l2([NotNull] FunctionParser.Assign_water_l2Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.init_declarator_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInit_declarator_list([NotNull] FunctionParser.Init_declarator_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.init_declarator_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInit_declarator_list([NotNull] FunctionParser.Init_declarator_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] FunctionParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] FunctionParser.ConditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.arrayIndexing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayIndexing([NotNull] FunctionParser.ArrayIndexingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.arrayIndexing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayIndexing([NotNull] FunctionParser.ArrayIndexingContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.Catch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCatch_statement([NotNull] FunctionParser.Catch_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.Catch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCatch_statement([NotNull] FunctionParser.Catch_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel([NotNull] FunctionParser.LabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel([NotNull] FunctionParser.LabelContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.exclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExclusive_or_expression([NotNull] FunctionParser.Exclusive_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.exclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExclusive_or_expression([NotNull] FunctionParser.Exclusive_or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] FunctionParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] FunctionParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.param_type_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam_type_id([NotNull] FunctionParser.Param_type_idContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.param_type_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam_type_id([NotNull] FunctionParser.Param_type_idContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.initDeclWithCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitDeclWithCall([NotNull] FunctionParser.InitDeclWithCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.initDeclWithCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitDeclWithCall([NotNull] FunctionParser.InitDeclWithCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.additive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditive_expression([NotNull] FunctionParser.Additive_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.additive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditive_expression([NotNull] FunctionParser.Additive_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.initializer_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializer_list([NotNull] FunctionParser.Initializer_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.initializer_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializer_list([NotNull] FunctionParser.Initializer_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_operator([NotNull] FunctionParser.Unary_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_operator([NotNull] FunctionParser.Unary_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.normOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNormOr([NotNull] FunctionParser.NormOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.normOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNormOr([NotNull] FunctionParser.NormOrContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.Else_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_statement([NotNull] FunctionParser.Else_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.Else_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_statement([NotNull] FunctionParser.Else_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.@sizeof"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeof([NotNull] FunctionParser.SizeofContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.@sizeof"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeof([NotNull] FunctionParser.SizeofContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.Switch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_statement([NotNull] FunctionParser.Switch_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.Switch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_statement([NotNull] FunctionParser.Switch_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.Do_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDo_statement([NotNull] FunctionParser.Do_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.Do_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDo_statement([NotNull] FunctionParser.Do_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.no_brackets_curlies_or_squares"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_brackets_curlies_or_squares([NotNull] FunctionParser.No_brackets_curlies_or_squaresContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.no_brackets_curlies_or_squares"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_brackets_curlies_or_squares([NotNull] FunctionParser.No_brackets_curlies_or_squaresContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.While_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_statement([NotNull] FunctionParser.While_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.While_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_statement([NotNull] FunctionParser.While_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] FunctionParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] FunctionParser.IdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.primaryOnly"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryOnly([NotNull] FunctionParser.PrimaryOnlyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.primaryOnly"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryOnly([NotNull] FunctionParser.PrimaryOnlyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.sizeof_operand2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeof_operand2([NotNull] FunctionParser.Sizeof_operand2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.sizeof_operand2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeof_operand2([NotNull] FunctionParser.Sizeof_operand2Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.no_brackets_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_brackets_or_semicolon([NotNull] FunctionParser.No_brackets_or_semicolonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.no_brackets_or_semicolon"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_brackets_or_semicolon([NotNull] FunctionParser.No_brackets_or_semicolonContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.no_curlies"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNo_curlies([NotNull] FunctionParser.No_curliesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.no_curlies"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNo_curlies([NotNull] FunctionParser.No_curliesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.equality_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_operator([NotNull] FunctionParser.Equality_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.equality_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_operator([NotNull] FunctionParser.Equality_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.param_type_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam_type_list([NotNull] FunctionParser.Param_type_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.param_type_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam_type_list([NotNull] FunctionParser.Param_type_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] FunctionParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] FunctionParser.ExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.simple_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_decl([NotNull] FunctionParser.Simple_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.simple_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_decl([NotNull] FunctionParser.Simple_declContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.block_starter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock_starter([NotNull] FunctionParser.Block_starterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.block_starter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock_starter([NotNull] FunctionParser.Block_starterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_operator([NotNull] FunctionParser.Assignment_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_operator([NotNull] FunctionParser.Assignment_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatements([NotNull] FunctionParser.StatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatements([NotNull] FunctionParser.StatementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_expression([NotNull] FunctionParser.Unary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_expression([NotNull] FunctionParser.Unary_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.ptrs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPtrs([NotNull] FunctionParser.PtrsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.ptrs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPtrs([NotNull] FunctionParser.PtrsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.initDeclWithAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitDeclWithAssign([NotNull] FunctionParser.InitDeclWithAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.initDeclWithAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitDeclWithAssign([NotNull] FunctionParser.InitDeclWithAssignContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] FunctionParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] FunctionParser.ConstantContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStatement([NotNull] FunctionParser.ContinueStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStatement([NotNull] FunctionParser.ContinueStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.ptr_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPtr_operator([NotNull] FunctionParser.Ptr_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.ptr_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPtr_operator([NotNull] FunctionParser.Ptr_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.class_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_def([NotNull] FunctionParser.Class_defContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.class_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_def([NotNull] FunctionParser.Class_defContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd_expression([NotNull] FunctionParser.And_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd_expression([NotNull] FunctionParser.And_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.template_param_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplate_param_list([NotNull] FunctionParser.Template_param_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.template_param_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplate_param_list([NotNull] FunctionParser.Template_param_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.declByType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclByType([NotNull] FunctionParser.DeclByTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.declByType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclByType([NotNull] FunctionParser.DeclByTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FunctionParser.sizeof_operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeof_operand([NotNull] FunctionParser.Sizeof_operandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunctionParser.sizeof_operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeof_operand([NotNull] FunctionParser.Sizeof_operandContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace myAntlr
